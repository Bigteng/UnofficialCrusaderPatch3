name: Build

on:
  # Trigger the workflow on push or pull request
  push:
    branches:
      - main
      - feature-testing
  pull_request:
    branches:
      - main
      - feature-testing
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created
  workflow_dispatch: {}

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2


    - name: Prepare signing by exporting secret to file
      shell: pwsh
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        UCP3_SIGNING_CERTIFICATE_CONTENTS: ${{ secrets.UCP3_SIGNING_CERTIFICATE_CONTENTS }}
      run: |
        Set-Content -Value "$env:UCP3_SIGNING_CERTIFICATE_CONTENTS" -Path "$($env:GITHUB_WORKSPACE)\ucp3-module-signing-key.pem" -Force


    - name: Run build script: dev build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        UCP3_READ_PACKAGES: ${{ secrets.UCP3_READ_PACKAGES }}
      shell: pwsh
      run: |
        .\scripts\build.ps1 -Build "Release" -NugetToken "$env:UCP3_READ_PACKAGES" -SigningCertificatePath "$($env:GITHUB_WORKSPACE)\ucp3-module-signing-key.pem"

    - name: Run build script: release build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        UCP3_READ_PACKAGES: ${{ secrets.UCP3_READ_PACKAGES }}
      shell: pwsh
      run: |
        .\scripts\build.ps1 -Build "ReleaseSecure" -NugetToken "$env:UCP3_READ_PACKAGES" -SigningCertificatePath "$($env:GITHUB_WORKSPACE)\ucp3-module-signing-key.pem"

    - name: Add UCP3 version to the github environment
      shell: pwsh
      run: |
        Import-Module powershell-yaml
        
        $f = Get-Content -Path "$($Path)\version.yml" -Raw
        $vyml = ConvertFrom-Yaml $f
            
        $version_string = "$($vyml.major).$($vyml.minor).$($vyml.patch)";

        $env:UCP_VERSION = $version_string
        echo "UCP_VERSION=$version_string" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Generate a snapshot UCP3 artifact name for dev build
      shell: pwsh
      env:
        BUILD_CONFIGURATION: Release
      run: |
        $name = "$env:GITHUB_SHA".SubString(0, 10)
        $type = "$env:BUILD_CONFIGURATION" #.SubString(0, 1)
        if($env:BUILD_CONFIGURATION -eq "Debug") {
          $type = "DevDebug"
        }
        if($env:BUILD_CONFIGURATION -eq "DebugSecure") {
          $type = "Debug"
        }
        if($env:BUILD_CONFIGURATION -eq "Release") {
          $type = "DevRelease"
        }
        if($env:BUILD_CONFIGURATION -eq "ReleaseSecure") {
          $type = "Release"
        }
        $version = $env:UCP_VERSION
        $env:UCP_NAME = "UCP3-snapshot-$type-$version-$name"
        echo "UCP_NAME=UCP3-snapshot-$type-$version-$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
 
    - name: Upload UCP3 dev release as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.UCP_NAME }}
        path: Release/ucp-package/*
        retention-days: 1

    - name: Generate a snapshot UCP3 artifact name for release build
      shell: pwsh
      env:
        BUILD_CONFIGURATION: ReleaseSecure
      run: |
        $name = "$env:GITHUB_SHA".SubString(0, 10)
        $type = "$env:BUILD_CONFIGURATION" #.SubString(0, 1)
        if($env:BUILD_CONFIGURATION -eq "Debug") {
          $type = "DevDebug"
        }
        if($env:BUILD_CONFIGURATION -eq "DebugSecure") {
          $type = "Debug"
        }
        if($env:BUILD_CONFIGURATION -eq "Release") {
          $type = "DevRelease"
        }
        if($env:BUILD_CONFIGURATION -eq "ReleaseSecure") {
          $type = "Release"
        }
        $version = $env:UCP_VERSION
        $env:UCP_NAME = "UCP3-snapshot-$type-$version-$name"
        echo "UCP_NAME=UCP3-snapshot-$type-$version-$name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Upload UCP3 release as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.UCP_NAME }}
        path: ReleaseSecure/ucp-package/*
        retention-days: 1

  release:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: windows-latest
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
      
    - name: zip artifacts
      shell: pwsh
      run: |
        pushd artifacts
        
        $artifactDirs = Get-ChildItem -Directory
        foreach($artifactDir in $artifactDirs) {
          $dirName = $artifactDir.name
          pushd $artifactDir
          7z a -tzip -m0=Copy "..\$dirName.zip" *
          popd
        }
        
        popd
      
      
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/*.zip"
        token: "${{ secrets.GITHUB_TOKEN }}"      
        tag: "latest"
        commit: "main"
        allowUpdates: true
        name: "Development Build"
        prerelease: true
        replacesArtifacts: true
        removeArtifacts: true
         
